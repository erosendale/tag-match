openapi: 3.0.0
info:
  version: "0.0.1"
  title: Tag Matching App
# during dev, should point to your local machine
servers:
  - url: http://localhost:3000/api/v1/
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
security:
  - bearerAuth: []
paths:
  /like/{userId}:
    post:
      description: Add a like from one profile to another
      operationId: addLike
      parameters:
        - name: userId
          in: path
          description: User ID to like
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Success
          schema:
            type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Unmatch a profile
      operationId: deleteLike
      parameters:
        - name: userid
          in: header
          required: true
          type: string
        - name: recipid
          in: query
          description: The userId to unlike.
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /find:
    get:
      description: Returns a set of profiles fitting criteria for a profile id
      operationId: findProfiles
      parameters:
        - name: userid
          in: header
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ProfileObject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /profile:
    get:
      description: Returns a profile by id
      operationId: getProfile
      parameters:
        - name: userid
          in: header
          required: true
          type: string
        - name: recipid
          in: query
          description: The id of the profile to retrieve
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ProfileObject"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create a profile
      operationId: createProfile
      parameters:
        - name: userid
          in: header
          required: true
          type: string
        - name: profile
          in: body
          description: The id of the profile to retrieve
          required: true
          schema:
            $ref: "#/definitions/ProfileObject"
      responses:
        "201":
          description: Success
          schema:
            type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  ProfileObject:
    properties:
      name:
        type: string
      dateOfBirth:
        type: string
        description: YYYY-MM-DD To be formatted by the frontend
      occupation:
        type: string
      bio:
        type: string
      photos:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          type: string
      location:
        type: object
        properties:
          latitude:
            type: number
          longitude:
            type: number
      maxDistance:
        type: number
        description: In kilometers.
      ageRange:
        type: object
        properties:
          min:
            type: number
          max:
            type: number
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
